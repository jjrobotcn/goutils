// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hwdevice.proto

package hwdevice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StateTypes int32

const (
	StateTypes_INIT    StateTypes = 0
	StateTypes_UP      StateTypes = 1
	StateTypes_UPGRADE StateTypes = 2
)

var StateTypes_name = map[int32]string{
	0: "INIT",
	1: "UP",
	2: "UPGRADE",
}

var StateTypes_value = map[string]int32{
	"INIT":    0,
	"UP":      1,
	"UPGRADE": 2,
}

func (x StateTypes) String() string {
	return proto.EnumName(StateTypes_name, int32(x))
}

func (StateTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_391467ce9faf325d, []int{0}
}

type StateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateRequest) Reset()         { *m = StateRequest{} }
func (m *StateRequest) String() string { return proto.CompactTextString(m) }
func (*StateRequest) ProtoMessage()    {}
func (*StateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_391467ce9faf325d, []int{0}
}

func (m *StateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateRequest.Unmarshal(m, b)
}
func (m *StateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateRequest.Marshal(b, m, deterministic)
}
func (m *StateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateRequest.Merge(m, src)
}
func (m *StateRequest) XXX_Size() int {
	return xxx_messageInfo_StateRequest.Size(m)
}
func (m *StateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StateRequest proto.InternalMessageInfo

type StateResponse struct {
	State                StateTypes `protobuf:"varint,1,opt,name=state,proto3,enum=hwdevice.StateTypes" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *StateResponse) Reset()         { *m = StateResponse{} }
func (m *StateResponse) String() string { return proto.CompactTextString(m) }
func (*StateResponse) ProtoMessage()    {}
func (*StateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_391467ce9faf325d, []int{1}
}

func (m *StateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateResponse.Unmarshal(m, b)
}
func (m *StateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateResponse.Marshal(b, m, deterministic)
}
func (m *StateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateResponse.Merge(m, src)
}
func (m *StateResponse) XXX_Size() int {
	return xxx_messageInfo_StateResponse.Size(m)
}
func (m *StateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StateResponse proto.InternalMessageInfo

func (m *StateResponse) GetState() StateTypes {
	if m != nil {
		return m.State
	}
	return StateTypes_INIT
}

type InfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoRequest) Reset()         { *m = InfoRequest{} }
func (m *InfoRequest) String() string { return proto.CompactTextString(m) }
func (*InfoRequest) ProtoMessage()    {}
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_391467ce9faf325d, []int{2}
}

func (m *InfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRequest.Unmarshal(m, b)
}
func (m *InfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRequest.Marshal(b, m, deterministic)
}
func (m *InfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRequest.Merge(m, src)
}
func (m *InfoRequest) XXX_Size() int {
	return xxx_messageInfo_InfoRequest.Size(m)
}
func (m *InfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRequest proto.InternalMessageInfo

type InfoResponse struct {
	Device string `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	// 硬件版本
	BoardVersion string `protobuf:"bytes,2,opt,name=board_version,json=boardVersion,proto3" json:"board_version,omitempty"`
	// 软件版本
	AppVersion           string   `protobuf:"bytes,3,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoResponse) Reset()         { *m = InfoResponse{} }
func (m *InfoResponse) String() string { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()    {}
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_391467ce9faf325d, []int{3}
}

func (m *InfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResponse.Unmarshal(m, b)
}
func (m *InfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResponse.Marshal(b, m, deterministic)
}
func (m *InfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResponse.Merge(m, src)
}
func (m *InfoResponse) XXX_Size() int {
	return xxx_messageInfo_InfoResponse.Size(m)
}
func (m *InfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResponse proto.InternalMessageInfo

func (m *InfoResponse) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *InfoResponse) GetBoardVersion() string {
	if m != nil {
		return m.BoardVersion
	}
	return ""
}

func (m *InfoResponse) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

type WriteStream struct {
	// Types that are valid to be assigned to Req:
	//	*WriteStream_Raw
	//	*WriteStream_Json
	//	*WriteStream_Binary
	Req                  isWriteStream_Req `protobuf_oneof:"req"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WriteStream) Reset()         { *m = WriteStream{} }
func (m *WriteStream) String() string { return proto.CompactTextString(m) }
func (*WriteStream) ProtoMessage()    {}
func (*WriteStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_391467ce9faf325d, []int{4}
}

func (m *WriteStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteStream.Unmarshal(m, b)
}
func (m *WriteStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteStream.Marshal(b, m, deterministic)
}
func (m *WriteStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteStream.Merge(m, src)
}
func (m *WriteStream) XXX_Size() int {
	return xxx_messageInfo_WriteStream.Size(m)
}
func (m *WriteStream) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteStream.DiscardUnknown(m)
}

var xxx_messageInfo_WriteStream proto.InternalMessageInfo

type isWriteStream_Req interface {
	isWriteStream_Req()
}

type WriteStream_Raw struct {
	Raw []byte `protobuf:"bytes,1,opt,name=raw,proto3,oneof"`
}

type WriteStream_Json struct {
	Json []byte `protobuf:"bytes,2,opt,name=json,proto3,oneof"`
}

type WriteStream_Binary struct {
	Binary []byte `protobuf:"bytes,3,opt,name=binary,proto3,oneof"`
}

func (*WriteStream_Raw) isWriteStream_Req() {}

func (*WriteStream_Json) isWriteStream_Req() {}

func (*WriteStream_Binary) isWriteStream_Req() {}

func (m *WriteStream) GetReq() isWriteStream_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *WriteStream) GetRaw() []byte {
	if x, ok := m.GetReq().(*WriteStream_Raw); ok {
		return x.Raw
	}
	return nil
}

func (m *WriteStream) GetJson() []byte {
	if x, ok := m.GetReq().(*WriteStream_Json); ok {
		return x.Json
	}
	return nil
}

func (m *WriteStream) GetBinary() []byte {
	if x, ok := m.GetReq().(*WriteStream_Binary); ok {
		return x.Binary
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WriteStream) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WriteStream_Raw)(nil),
		(*WriteStream_Json)(nil),
		(*WriteStream_Binary)(nil),
	}
}

type ReadStream struct {
	// Types that are valid to be assigned to Res:
	//	*ReadStream_Raw
	//	*ReadStream_Json
	//	*ReadStream_Binary
	Res                  isReadStream_Res `protobuf_oneof:"res"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReadStream) Reset()         { *m = ReadStream{} }
func (m *ReadStream) String() string { return proto.CompactTextString(m) }
func (*ReadStream) ProtoMessage()    {}
func (*ReadStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_391467ce9faf325d, []int{5}
}

func (m *ReadStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadStream.Unmarshal(m, b)
}
func (m *ReadStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadStream.Marshal(b, m, deterministic)
}
func (m *ReadStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadStream.Merge(m, src)
}
func (m *ReadStream) XXX_Size() int {
	return xxx_messageInfo_ReadStream.Size(m)
}
func (m *ReadStream) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadStream.DiscardUnknown(m)
}

var xxx_messageInfo_ReadStream proto.InternalMessageInfo

type isReadStream_Res interface {
	isReadStream_Res()
}

type ReadStream_Raw struct {
	Raw []byte `protobuf:"bytes,1,opt,name=raw,proto3,oneof"`
}

type ReadStream_Json struct {
	Json []byte `protobuf:"bytes,2,opt,name=json,proto3,oneof"`
}

type ReadStream_Binary struct {
	Binary []byte `protobuf:"bytes,3,opt,name=binary,proto3,oneof"`
}

func (*ReadStream_Raw) isReadStream_Res() {}

func (*ReadStream_Json) isReadStream_Res() {}

func (*ReadStream_Binary) isReadStream_Res() {}

func (m *ReadStream) GetRes() isReadStream_Res {
	if m != nil {
		return m.Res
	}
	return nil
}

func (m *ReadStream) GetRaw() []byte {
	if x, ok := m.GetRes().(*ReadStream_Raw); ok {
		return x.Raw
	}
	return nil
}

func (m *ReadStream) GetJson() []byte {
	if x, ok := m.GetRes().(*ReadStream_Json); ok {
		return x.Json
	}
	return nil
}

func (m *ReadStream) GetBinary() []byte {
	if x, ok := m.GetRes().(*ReadStream_Binary); ok {
		return x.Binary
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReadStream) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReadStream_Raw)(nil),
		(*ReadStream_Json)(nil),
		(*ReadStream_Binary)(nil),
	}
}

type UpgradeRequest struct {
	// 升级包名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 升级文件数据包
	Package              []byte   `protobuf:"bytes,2,opt,name=package,proto3" json:"package,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpgradeRequest) Reset()         { *m = UpgradeRequest{} }
func (m *UpgradeRequest) String() string { return proto.CompactTextString(m) }
func (*UpgradeRequest) ProtoMessage()    {}
func (*UpgradeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_391467ce9faf325d, []int{6}
}

func (m *UpgradeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeRequest.Unmarshal(m, b)
}
func (m *UpgradeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeRequest.Marshal(b, m, deterministic)
}
func (m *UpgradeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeRequest.Merge(m, src)
}
func (m *UpgradeRequest) XXX_Size() int {
	return xxx_messageInfo_UpgradeRequest.Size(m)
}
func (m *UpgradeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeRequest proto.InternalMessageInfo

func (m *UpgradeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpgradeRequest) GetPackage() []byte {
	if m != nil {
		return m.Package
	}
	return nil
}

type UpgradeResponse struct {
	// 升级进度
	Progress             float32  `protobuf:"fixed32,1,opt,name=progress,proto3" json:"progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpgradeResponse) Reset()         { *m = UpgradeResponse{} }
func (m *UpgradeResponse) String() string { return proto.CompactTextString(m) }
func (*UpgradeResponse) ProtoMessage()    {}
func (*UpgradeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_391467ce9faf325d, []int{7}
}

func (m *UpgradeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeResponse.Unmarshal(m, b)
}
func (m *UpgradeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeResponse.Marshal(b, m, deterministic)
}
func (m *UpgradeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeResponse.Merge(m, src)
}
func (m *UpgradeResponse) XXX_Size() int {
	return xxx_messageInfo_UpgradeResponse.Size(m)
}
func (m *UpgradeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeResponse proto.InternalMessageInfo

func (m *UpgradeResponse) GetProgress() float32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

type RebootRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RebootRequest) Reset()         { *m = RebootRequest{} }
func (m *RebootRequest) String() string { return proto.CompactTextString(m) }
func (*RebootRequest) ProtoMessage()    {}
func (*RebootRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_391467ce9faf325d, []int{8}
}

func (m *RebootRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RebootRequest.Unmarshal(m, b)
}
func (m *RebootRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RebootRequest.Marshal(b, m, deterministic)
}
func (m *RebootRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RebootRequest.Merge(m, src)
}
func (m *RebootRequest) XXX_Size() int {
	return xxx_messageInfo_RebootRequest.Size(m)
}
func (m *RebootRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RebootRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RebootRequest proto.InternalMessageInfo

type RebootResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RebootResponse) Reset()         { *m = RebootResponse{} }
func (m *RebootResponse) String() string { return proto.CompactTextString(m) }
func (*RebootResponse) ProtoMessage()    {}
func (*RebootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_391467ce9faf325d, []int{9}
}

func (m *RebootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RebootResponse.Unmarshal(m, b)
}
func (m *RebootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RebootResponse.Marshal(b, m, deterministic)
}
func (m *RebootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RebootResponse.Merge(m, src)
}
func (m *RebootResponse) XXX_Size() int {
	return xxx_messageInfo_RebootResponse.Size(m)
}
func (m *RebootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RebootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RebootResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("hwdevice.StateTypes", StateTypes_name, StateTypes_value)
	proto.RegisterType((*StateRequest)(nil), "hwdevice.StateRequest")
	proto.RegisterType((*StateResponse)(nil), "hwdevice.StateResponse")
	proto.RegisterType((*InfoRequest)(nil), "hwdevice.InfoRequest")
	proto.RegisterType((*InfoResponse)(nil), "hwdevice.InfoResponse")
	proto.RegisterType((*WriteStream)(nil), "hwdevice.WriteStream")
	proto.RegisterType((*ReadStream)(nil), "hwdevice.ReadStream")
	proto.RegisterType((*UpgradeRequest)(nil), "hwdevice.UpgradeRequest")
	proto.RegisterType((*UpgradeResponse)(nil), "hwdevice.UpgradeResponse")
	proto.RegisterType((*RebootRequest)(nil), "hwdevice.RebootRequest")
	proto.RegisterType((*RebootResponse)(nil), "hwdevice.RebootResponse")
}

func init() { proto.RegisterFile("hwdevice.proto", fileDescriptor_391467ce9faf325d) }

var fileDescriptor_391467ce9faf325d = []byte{
	// 450 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x14, 0x8c, 0x9d, 0xc4, 0x49, 0x27, 0x89, 0x1b, 0x3d, 0x95, 0xd4, 0xf8, 0x02, 0x5a, 0x2e, 0x55,
	0x11, 0x55, 0x55, 0x0e, 0x48, 0x20, 0x2a, 0x51, 0x15, 0x41, 0x2e, 0xa8, 0x72, 0x1b, 0xca, 0x0d,
	0x6d, 0x9a, 0x25, 0x04, 0xa8, 0xbd, 0xdd, 0x35, 0xad, 0xfa, 0xef, 0xf8, 0x69, 0xc8, 0xfb, 0xe1,
	0x98, 0x96, 0x63, 0x6f, 0x99, 0xd9, 0x79, 0xf3, 0xa2, 0x99, 0x67, 0xc4, 0xdf, 0x6f, 0x16, 0xe2,
	0x7a, 0x75, 0x21, 0xf6, 0xa4, 0x2a, 0xca, 0x82, 0xfa, 0x1e, 0xb3, 0x18, 0xc3, 0xd3, 0x92, 0x97,
	0x22, 0x13, 0x57, 0xbf, 0x85, 0x2e, 0xd9, 0x1b, 0x8c, 0x1c, 0xd6, 0xb2, 0xc8, 0xb5, 0xa0, 0x5d,
	0x74, 0x75, 0x45, 0x24, 0xc1, 0xd3, 0x60, 0x27, 0x3e, 0xd8, 0xda, 0xab, 0xad, 0x8c, 0xee, 0xec,
	0x56, 0x0a, 0x9d, 0x59, 0x09, 0x1b, 0x61, 0x30, 0xcd, 0xbf, 0x15, 0xde, 0xeb, 0x17, 0x86, 0x16,
	0x3a, 0xab, 0x09, 0x22, 0x3b, 0x6a, 0xbc, 0x36, 0x32, 0x87, 0xe8, 0x19, 0x46, 0xf3, 0x82, 0xab,
	0xc5, 0xd7, 0x6b, 0xa1, 0xf4, 0xaa, 0xc8, 0x93, 0xd0, 0x3c, 0x0f, 0x0d, 0xf9, 0xd9, 0x72, 0xf4,
	0x04, 0x03, 0x2e, 0x65, 0x2d, 0x69, 0x1b, 0x09, 0xb8, 0x94, 0x4e, 0xc0, 0xbe, 0x60, 0x70, 0xae,
	0x56, 0xa5, 0x38, 0x2d, 0x95, 0xe0, 0x97, 0x44, 0x68, 0x2b, 0x7e, 0x63, 0x36, 0x0d, 0x3f, 0xb6,
	0xb2, 0x0a, 0xd0, 0x16, 0x3a, 0x3f, 0xb4, 0xf3, 0xaf, 0x48, 0x83, 0x28, 0x41, 0x34, 0x5f, 0xe5,
	0x5c, 0xdd, 0x1a, 0xd3, 0x8a, 0x77, 0xf8, 0xa8, 0x8b, 0xb6, 0x12, 0x57, 0xec, 0x1c, 0xc8, 0x04,
	0x5f, 0x3c, 0xb4, 0xb1, 0x66, 0x87, 0x88, 0x67, 0x72, 0xa9, 0xf8, 0xc2, 0xc7, 0x4f, 0x84, 0x4e,
	0xce, 0x2f, 0x7d, 0x40, 0xe6, 0x37, 0x25, 0xe8, 0x49, 0x7e, 0xf1, 0x93, 0x2f, 0x85, 0xf5, 0xcf,
	0x3c, 0x64, 0x2f, 0xb0, 0x59, 0xcf, 0xbb, 0x8c, 0x53, 0xf4, 0xa5, 0x2a, 0x96, 0x4a, 0x68, 0x6d,
	0x4c, 0xc2, 0xac, 0xc6, 0x6c, 0x13, 0xa3, 0x4c, 0xcc, 0x8b, 0xa2, 0xf4, 0x05, 0x8d, 0x11, 0x7b,
	0xc2, 0x8e, 0xef, 0x3e, 0x07, 0xd6, 0xb5, 0x52, 0x1f, 0x9d, 0xe9, 0xa7, 0xe9, 0xd9, 0xb8, 0x45,
	0x11, 0xc2, 0xd9, 0xc9, 0x38, 0xa0, 0x01, 0x7a, 0xb3, 0x93, 0x0f, 0xd9, 0xbb, 0xe3, 0xf7, 0xe3,
	0xf0, 0xe0, 0x4f, 0x88, 0xe8, 0xd8, 0x56, 0xf8, 0x1a, 0x5d, 0x33, 0x47, 0x93, 0x3b, 0xf7, 0xe1,
	0x56, 0xa5, 0xdb, 0xf7, 0x78, 0xbb, 0x91, 0xb5, 0xe8, 0x15, 0x3a, 0xd5, 0x99, 0xd0, 0xa3, 0xb5,
	0xa4, 0x71, 0x45, 0xe9, 0xe4, 0x2e, 0x5d, 0x0f, 0x1e, 0x62, 0xa3, 0xea, 0xc5, 0xb4, 0xde, 0x9c,
	0x6e, 0x9c, 0x41, 0xda, 0xb8, 0xd7, 0x75, 0x87, 0xac, 0xb5, 0x13, 0xec, 0x07, 0x74, 0x84, 0x9e,
	0x8b, 0x8f, 0x92, 0xb5, 0xec, 0xdf, 0x46, 0xd2, 0xc7, 0xff, 0x79, 0xf1, 0xff, 0x60, 0x3f, 0xa0,
	0xb7, 0x88, 0x6c, 0x84, 0xb4, 0xdd, 0xdc, 0xd4, 0x48, 0x39, 0x4d, 0xee, 0x3f, 0x78, 0x83, 0x79,
	0x64, 0xbe, 0xc7, 0x97, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xf7, 0x5b, 0x54, 0xe8, 0xa1, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DeviceClient is the client API for Device service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeviceClient interface {
	// 获取设备运行状态
	State(ctx context.Context, in *StateRequest, opts ...grpc.CallOption) (*StateResponse, error)
	// 获取设备信息
	Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error)
	// 设备数据读写方法
	// Upgrade与Reboot时将关闭此方法的所有连接
	ReadWrite(ctx context.Context, opts ...grpc.CallOption) (Device_ReadWriteClient, error)
	// 设备升级
	Upgrade(ctx context.Context, in *UpgradeRequest, opts ...grpc.CallOption) (Device_UpgradeClient, error)
	// 设备重启
	Reboot(ctx context.Context, in *RebootRequest, opts ...grpc.CallOption) (*RebootResponse, error)
}

type deviceClient struct {
	cc *grpc.ClientConn
}

func NewDeviceClient(cc *grpc.ClientConn) DeviceClient {
	return &deviceClient{cc}
}

func (c *deviceClient) State(ctx context.Context, in *StateRequest, opts ...grpc.CallOption) (*StateResponse, error) {
	out := new(StateResponse)
	err := c.cc.Invoke(ctx, "/hwdevice.Device/State", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := c.cc.Invoke(ctx, "/hwdevice.Device/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) ReadWrite(ctx context.Context, opts ...grpc.CallOption) (Device_ReadWriteClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Device_serviceDesc.Streams[0], "/hwdevice.Device/ReadWrite", opts...)
	if err != nil {
		return nil, err
	}
	x := &deviceReadWriteClient{stream}
	return x, nil
}

type Device_ReadWriteClient interface {
	Send(*WriteStream) error
	Recv() (*ReadStream, error)
	grpc.ClientStream
}

type deviceReadWriteClient struct {
	grpc.ClientStream
}

func (x *deviceReadWriteClient) Send(m *WriteStream) error {
	return x.ClientStream.SendMsg(m)
}

func (x *deviceReadWriteClient) Recv() (*ReadStream, error) {
	m := new(ReadStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deviceClient) Upgrade(ctx context.Context, in *UpgradeRequest, opts ...grpc.CallOption) (Device_UpgradeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Device_serviceDesc.Streams[1], "/hwdevice.Device/Upgrade", opts...)
	if err != nil {
		return nil, err
	}
	x := &deviceUpgradeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Device_UpgradeClient interface {
	Recv() (*UpgradeResponse, error)
	grpc.ClientStream
}

type deviceUpgradeClient struct {
	grpc.ClientStream
}

func (x *deviceUpgradeClient) Recv() (*UpgradeResponse, error) {
	m := new(UpgradeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deviceClient) Reboot(ctx context.Context, in *RebootRequest, opts ...grpc.CallOption) (*RebootResponse, error) {
	out := new(RebootResponse)
	err := c.cc.Invoke(ctx, "/hwdevice.Device/Reboot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeviceServer is the server API for Device service.
type DeviceServer interface {
	// 获取设备运行状态
	State(context.Context, *StateRequest) (*StateResponse, error)
	// 获取设备信息
	Info(context.Context, *InfoRequest) (*InfoResponse, error)
	// 设备数据读写方法
	// Upgrade与Reboot时将关闭此方法的所有连接
	ReadWrite(Device_ReadWriteServer) error
	// 设备升级
	Upgrade(*UpgradeRequest, Device_UpgradeServer) error
	// 设备重启
	Reboot(context.Context, *RebootRequest) (*RebootResponse, error)
}

// UnimplementedDeviceServer can be embedded to have forward compatible implementations.
type UnimplementedDeviceServer struct {
}

func (*UnimplementedDeviceServer) State(ctx context.Context, req *StateRequest) (*StateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method State not implemented")
}
func (*UnimplementedDeviceServer) Info(ctx context.Context, req *InfoRequest) (*InfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Info not implemented")
}
func (*UnimplementedDeviceServer) ReadWrite(srv Device_ReadWriteServer) error {
	return status.Errorf(codes.Unimplemented, "method ReadWrite not implemented")
}
func (*UnimplementedDeviceServer) Upgrade(req *UpgradeRequest, srv Device_UpgradeServer) error {
	return status.Errorf(codes.Unimplemented, "method Upgrade not implemented")
}
func (*UnimplementedDeviceServer) Reboot(ctx context.Context, req *RebootRequest) (*RebootResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reboot not implemented")
}

func RegisterDeviceServer(s *grpc.Server, srv DeviceServer) {
	s.RegisterService(&_Device_serviceDesc, srv)
}

func _Device_State_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).State(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hwdevice.Device/State",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).State(ctx, req.(*StateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hwdevice.Device/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).Info(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_ReadWrite_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DeviceServer).ReadWrite(&deviceReadWriteServer{stream})
}

type Device_ReadWriteServer interface {
	Send(*ReadStream) error
	Recv() (*WriteStream, error)
	grpc.ServerStream
}

type deviceReadWriteServer struct {
	grpc.ServerStream
}

func (x *deviceReadWriteServer) Send(m *ReadStream) error {
	return x.ServerStream.SendMsg(m)
}

func (x *deviceReadWriteServer) Recv() (*WriteStream, error) {
	m := new(WriteStream)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Device_Upgrade_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UpgradeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeviceServer).Upgrade(m, &deviceUpgradeServer{stream})
}

type Device_UpgradeServer interface {
	Send(*UpgradeResponse) error
	grpc.ServerStream
}

type deviceUpgradeServer struct {
	grpc.ServerStream
}

func (x *deviceUpgradeServer) Send(m *UpgradeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Device_Reboot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RebootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).Reboot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hwdevice.Device/Reboot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).Reboot(ctx, req.(*RebootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Device_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hwdevice.Device",
	HandlerType: (*DeviceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "State",
			Handler:    _Device_State_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _Device_Info_Handler,
		},
		{
			MethodName: "Reboot",
			Handler:    _Device_Reboot_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReadWrite",
			Handler:       _Device_ReadWrite_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Upgrade",
			Handler:       _Device_Upgrade_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "hwdevice.proto",
}
